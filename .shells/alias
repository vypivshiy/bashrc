#!/bin/bash

# play audio without video. Useful for listening video from youtube, twitch, etc
function mpv-a(){
    mpv --no-video $*
}

# pacman aliases
function pacsearch(){
    sudo pacman -Ss $1
}

function pacinstall(){
    sudo pacman -S $1
}

alias pacupdate="sudo pacman -Syu"


# Useful unarchiver!
function extract () {
        if [ -f $1 ] ; then
                case $1 in
                        *.tar.bz2)        tar xjf $1                ;;
                        *.tar.gz)        tar xzf $1                ;;
                        *.bz2)                bunzip2 $1                ;;
                        *.rar)                rar x $1                ;;
                        *.gz)                gunzip $1                ;;
                        *.tar)                tar xf $1                ;;
                        *.tbz2)                tar xjf $1                ;;
                        *.tgz)                tar xzf $1                ;;
                        *.zip)                unzip $1                ;;
                        *.Z)                uncompress $1        ;;
                        *)                        echo "'$1' cannot be extracted via extract()" ;;
                esac
        else
                echo "'$1' is not a valid file"
        fi
}

# Convert video to gif file.
# Usage: video2gif video_file (scale) (fps)
function video2gif() {
  ffmpeg -y -i "${1}" -vf fps=${3:-10},scale=${2:-320}:-1:flags=lanczos,palettegen "${1}.png"
  ffmpeg -i "${1}" -i "${1}.png" -filter_complex "fps=${3:-10},scale=${2:-320}:-1:flags=lanczos[x];[x][1:v]paletteuse" "${1}".gif
  rm "${1}.png"
}

# video cutter
# video-cut-timelapse video_file (start) (end)

function video-cut-timelapse(){
    ffmpeg -ss ${2:-00:00:00} -to $3 -i "${1}" -c copy "cut_${1}"
}

# video-cut-timelapse video_file (start) (delay)
function video-cut-duration(){
    ffmpeg -ss ${2:-00:00:00} -t $3 -i "${1}" -c copy "cut_${1}"
}
